funcs = ["g_idle_source_new","g_timeout_source_new","g_timeout_source_new_seconds"]
namespace = "GLib"
version = "2.0"

[[types]]
  err_funcs = ["g_variant_new_from_data"]
  funcs = ["g_variant_unref","g_variant_ref","g_variant_ref_sink","g_variant_get_type","g_variant_is_floating","g_variant_new_boolean","g_variant_new_byte","g_variant_new_int16","g_variant_new_uint16","g_variant_new_int32","g_variant_new_uint32","g_variant_new_int64","g_variant_new_uint64","g_variant_new_handle","g_variant_new_double","g_variant_new_string","g_variant_new_object_path","g_variant_is_object_path","g_variant_new_signature","g_variant_is_signature","g_variant_new_variant","g_variant_new_strv","g_variant_new_objv","g_variant_new_bytestring","g_variant_new_bytestring_array","g_variant_get_boolean","g_variant_get_byte","g_variant_get_int16","g_variant_get_uint16","g_variant_get_int32","g_variant_get_uint32","g_variant_get_int64","g_variant_get_uint64","g_variant_get_handle","g_variant_get_double","g_variant_get_strv","g_variant_get_variant","g_variant_dup_strv","g_variant_get_objv","g_variant_dup_objv","g_variant_get_bytestring","g_variant_dup_bytestring","g_variant_get_bytestring_array","g_variant_dup_bytestring_array","g_variant_new_maybe","g_variant_new_array","g_variant_new_tuple","g_variant_new_dict_entry","g_variant_new_fixed_array","g_variant_get_maybe","g_variant_n_children","g_variant_get_child_value","g_variant_lookup_value","g_variant_get_size","g_variant_get_data","g_variant_get_data_as_bytes","g_variant_store","g_variant_new_take_string","g_variant_byteswap","g_variant_check_format_string","g_variant_classify","g_variant_dup_string","g_variant_get_normal_form","g_variant_get_type_string","g_variant_is_container","g_variant_is_normal_form","g_variant_print","g_variant_take_ref","g_variant_parse_error_print_context","g_variant_new_from_bytes","g_variant_compare","g_variant_equal","g_variant_hash","g_variant_is_of_type","g_variant_iter_new","g_variant_parse_error_quark"]
  ignore_funcs = ["g_variant_new","g_variant_new_parsed","g_variant_new_parsed_va","g_variant_new_printf","g_variant_new_va","g_variant_get","g_variant_get_child","g_variant_get_fixed_array","g_variant_get_va","g_variant_lookup","g_variant_print_string","g_variant_parser_get_error_quark","g_variant_parse"]
  manual_funcs = ["g_variant_get_string"]
  name = "Variant"

[[types]]
  err_funcs = ["g_bytes_new","g_bytes_new_static","g_bytes_new_take","g_bytes_new_with_free_func","g_bytes_compare","g_bytes_equal","g_bytes_get_data","g_bytes_hash","g_bytes_unref_to_array","g_bytes_unref_to_data"]
  funcs = ["g_bytes_new_from_bytes","g_bytes_get_size","g_bytes_ref","g_bytes_unref"]
  ignore_funcs = []
  manual_funcs = []
  name = "Bytes"

[[types]]
  err_funcs = []
  funcs = ["g_variant_type_new","g_variant_type_new_array","g_variant_type_new_dict_entry","g_variant_type_new_maybe","g_variant_type_new_tuple","g_variant_type_checked_","g_variant_type_string_is_valid","g_variant_type_copy","g_variant_type_dup_string","g_variant_type_element","g_variant_type_equal","g_variant_type_first","g_variant_type_free","g_variant_type_get_string_length","g_variant_type_hash","g_variant_type_is_array","g_variant_type_is_container","g_variant_type_is_definite","g_variant_type_is_dict_entry","g_variant_type_is_maybe","g_variant_type_is_subtype_of","g_variant_type_is_tuple","g_variant_type_is_variant","g_variant_type_key","g_variant_type_n_items","g_variant_type_next","g_variant_type_peek_string","g_variant_type_value","g_variant_type_string_scan","g_variant_type_is_basic"]
  ignore_funcs = []
  manual_funcs = []
  name = "VariantType"

[[types]]
  err_funcs = []
  funcs = ["g_error_free"]
  ignore_funcs = []
  manual_funcs = []
  name = "Error"

[[types]]
  err_funcs = []
  funcs = ["g_main_loop_ref","g_main_loop_unref","g_main_loop_run","g_main_loop_quit","g_main_loop_get_context","g_main_loop_is_running","g_main_loop_new"]
  ignore_funcs = []
  manual_funcs = []
  name = "MainLoop"

[[types]]
  err_funcs = ["g_main_context_check","g_main_context_query","g_main_context_set_poll_func","g_main_context_wait"]
  funcs = ["g_main_context_ref","g_main_context_unref","g_main_context_default","g_main_context_new","g_main_context_iteration","g_main_context_find_source_by_id","g_main_context_pending","g_main_context_acquire","g_main_context_dispatch","g_main_context_find_source_by_user_data","g_main_context_is_owner","g_main_context_pop_thread_default","g_main_context_push_thread_default","g_main_context_release","g_main_context_wakeup","g_main_context_get_thread_default","g_main_context_ref_thread_default","g_main_context_add_poll","g_main_context_remove_poll"]
  ignore_funcs = ["g_main_context_find_source_by_funcs_user_data","g_main_context_get_poll_func","g_main_context_invoke","g_main_context_invoke_full","g_main_context_prepare"]
  manual_funcs = []
  name = "MainContext"

[[types]]
  err_funcs = []
  funcs = ["g_idle_source_new","g_timeout_source_new","g_timeout_source_new_seconds","g_source_ref","g_source_unref","g_source_set_closure","g_source_attach","g_source_destroy","g_source_is_destroyed","g_source_set_priority","g_source_get_priority","g_source_set_can_recurse","g_source_get_can_recurse","g_source_get_id","g_source_get_name","g_source_set_name","g_source_set_name_by_id","g_source_get_context","g_source_get_time","g_source_remove","g_source_add_child_source","g_source_add_poll","g_source_add_unix_fd","g_source_get_ready_time","g_source_modify_unix_fd","g_source_query_unix_fd","g_source_remove_child_source","g_source_remove_poll","g_source_remove_unix_fd","g_source_set_ready_time","g_source_remove_by_user_data"]
  ignore_funcs = ["g_source_new","g_source_set_callback","g_source_set_callback_indirect","g_source_set_funcs","g_source_remove_by_funcs_user_data","g_source_get_current_time"]
  manual_funcs = []
  name = "Source"

[[types]]
  err_funcs = []
  funcs = ["g_variant_iter_copy","g_variant_iter_free","g_variant_iter_init","g_variant_iter_n_children","g_variant_iter_next_value"]
  ignore_funcs = ["g_variant_iter_loop","g_variant_iter_next"]
  manual_funcs = []
  name = "VariantIter"

[[types]]
  err_funcs = []
  funcs = []
  ignore_funcs = []
  manual_funcs = []
  name = "PollFD"

[[types]]
  err_funcs = ["g_time_val_from_iso8601"]
  funcs = ["g_time_val_add","g_time_val_to_iso8601"]
  ignore_funcs = []
  manual_funcs = []
  name = "TimeVal"
